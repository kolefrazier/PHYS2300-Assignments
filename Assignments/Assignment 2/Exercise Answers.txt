## Exercise 2.1
Using the program I wrote, I found the time for a ball to fall 100m and hit the ground was 1.8 seconds.

## Exercise 2.2
a) We know that r^3 = (Gravity * Mass of the Earth * Time^2)/(4*Pi^2), which represents the distance from the very center of the Earth that a satellite must have. Converting this to subtract the radius of the Earth (R), we can see that orbit height is:
Orbit Height = (GMT^2/4Pi^2)^(1/3)-R

b) See file: Exercise 2.2.py

c) Altitudes for orbit periods:
	Once a day: 35870187.704 meters (Which is approximately 35,870.187 km)
	90 minutes: 281570.195 meters
	45 minutes: 2700281570.195 meters

d) A geosynchronous satellite needs to stay in as close to the same position at all times. This is what makes it geosynchronous - it's in sync with a geographical location.
	Earth really takes 23.93 hours to rotate once. While we do call a day 24 hours, we have to make up for it once every four years (Leap Day). If a satellite were to fly at the altitude needed for a 24 hour orbit, it would slowly drift away from its geographically synced location, making it not have a geosynchronous orbit.

	24 hours (86400 seconds):
	23.93 hours 86148 seconds):

## Exercise 2.6
## Exercise 2.7
	See file Exercise 2.7.py for program and output.
## Exercise 2.8
	I used two test arrays (a=array[1,2] and b=array[3,4]) to verify array-math behavior before proceeding to parts A, B and C. Adding A+B yields [4,6], so I'm assuming this works on a one-to-one basis (such as A[1] to B[1], or, A[i] to B[i]).
A) (b/a+1) - Order of operations: b/a then add one.
	Hand-worked: [2/1+1=3, 4/2+1=3, 6/3+1=3, 8/4+1=3] => [3,3,3,3]
	Actual: [3,3,3,3]
B) (b/(a+1) - Order of ops: add one to a then divide b by this.
	Hand-worked: 2/(1+2) = 1, 4/(2+1) = 4/3, 6/(3+1) = 3/2, 8/(4+1) = 8/5 => [1,4/3,3/2,8/5]
	Actual: 
C)
## Exercise 2.12
## Exercise 2.13